
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xaf\x13\xf6\xb3\xa9\xa7cgQ\xd2\xa0\xf6S\xe0\xb3\x17'
    
_lr_action_items = {'DIVIDE':([11,12,22,23,24,25,26,27,28,29,30,32,],[21,-6,21,-12,21,-11,-9,21,21,-10,-13,21,]),'RPAREN':([12,22,23,25,26,27,28,29,30,],[-6,30,-12,-11,-9,-7,-8,-10,-13,]),'NAME':([1,3,],[5,6,]),'POWER':([11,12,22,23,24,25,26,27,28,29,30,32,],[17,-6,17,-12,17,-11,17,17,17,17,-13,17,]),'EQUALS':([5,],[8,]),'POLY':([0,7,],[1,1,]),'NUMBER':([8,13,14,16,17,18,19,20,21,31,],[12,12,12,12,12,12,12,12,12,12,]),'LBRACKET':([9,],[16,]),'PLUS':([11,12,22,23,24,25,26,27,28,29,30,32,],[19,-6,19,-12,19,-11,-9,-7,-8,-10,-13,19,]),'LPAREN':([8,13,14,16,17,18,19,20,21,31,],[13,13,13,13,13,13,13,13,13,13,]),'IN':([6,],[9,]),'VAR':([0,7,],[3,3,]),'COMMA':([12,23,24,25,26,27,28,29,30,],[-6,-12,31,-11,-9,-7,-8,-10,-13,]),'RBRACKET':([12,23,25,26,27,28,29,30,32,],[-6,-12,-11,-9,-7,-8,-10,-13,33,]),'TIMES':([11,12,22,23,24,25,26,27,28,29,30,32,],[18,-6,18,-12,18,-11,-9,18,18,-10,-13,18,]),'MINUS':([8,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,],[14,20,-6,14,14,14,14,14,14,14,14,20,-12,20,-11,-9,-7,-8,-10,-13,14,20,]),'ENDSTATEMENT':([4,7,10,11,12,15,23,25,26,27,28,29,30,33,],[7,-3,7,-5,-6,-4,-12,-11,-9,-7,-8,-10,-13,-14,]),'$end':([2,4,7,10,11,12,15,23,25,26,27,28,29,30,33,],[0,-1,-3,-2,-5,-6,-4,-12,-11,-9,-7,-8,-10,-13,-14,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'numexpression':([8,13,14,16,17,18,19,20,21,31,],[11,22,23,24,25,26,27,28,29,32,]),'expression':([0,7,],[4,10,]),'statement':([0,],[2,]),'interval':([9,],[15,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> expression','statement',1,'p_statement_expr','/home/mantas/workspace/NIA/KodiakInterface/src/ply/kodiak_parser.py',39),
  ('expression -> expression ENDSTATEMENT expression','expression',3,'p_expression_comp','/home/mantas/workspace/NIA/KodiakInterface/src/ply/kodiak_parser.py',43),
  ('expression -> expression ENDSTATEMENT','expression',2,'p_expression_comp','/home/mantas/workspace/NIA/KodiakInterface/src/ply/kodiak_parser.py',44),
  ('expression -> VAR NAME IN interval','expression',4,'p_expression_var','/home/mantas/workspace/NIA/KodiakInterface/src/ply/kodiak_parser.py',54),
  ('expression -> POLY NAME EQUALS numexpression','expression',4,'p_expression_poly','/home/mantas/workspace/NIA/KodiakInterface/src/ply/kodiak_parser.py',58),
  ('numexpression -> NUMBER','numexpression',1,'p_numexpression_num','/home/mantas/workspace/NIA/KodiakInterface/src/ply/kodiak_parser.py',66),
  ('numexpression -> numexpression PLUS numexpression','numexpression',3,'p_numexpression_binop','/home/mantas/workspace/NIA/KodiakInterface/src/ply/kodiak_parser.py',70),
  ('numexpression -> numexpression MINUS numexpression','numexpression',3,'p_numexpression_binop','/home/mantas/workspace/NIA/KodiakInterface/src/ply/kodiak_parser.py',71),
  ('numexpression -> numexpression TIMES numexpression','numexpression',3,'p_numexpression_binop','/home/mantas/workspace/NIA/KodiakInterface/src/ply/kodiak_parser.py',72),
  ('numexpression -> numexpression DIVIDE numexpression','numexpression',3,'p_numexpression_binop','/home/mantas/workspace/NIA/KodiakInterface/src/ply/kodiak_parser.py',73),
  ('numexpression -> numexpression POWER numexpression','numexpression',3,'p_numexpression_binop','/home/mantas/workspace/NIA/KodiakInterface/src/ply/kodiak_parser.py',74),
  ('numexpression -> MINUS numexpression','numexpression',2,'p_numexpression_uminus','/home/mantas/workspace/NIA/KodiakInterface/src/ply/kodiak_parser.py',83),
  ('numexpression -> LPAREN numexpression RPAREN','numexpression',3,'p_numexpression_group','/home/mantas/workspace/NIA/KodiakInterface/src/ply/kodiak_parser.py',87),
  ('interval -> LBRACKET numexpression COMMA numexpression RBRACKET','interval',5,'p_interval','/home/mantas/workspace/NIA/KodiakInterface/src/ply/kodiak_parser.py',91),
]
